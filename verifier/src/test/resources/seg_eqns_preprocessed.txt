~~~ Parameters:
beam.dx
beam.dy
beam.dz
beam.q_a
beam.q_i
beam.q_j
beam.q_k
leftmotor.angle
leftmotor.q_a
leftmotor.q_i
leftmotor.q_j
leftmotor.q_k
leftwheel.dx
leftwheel.dy
leftwheel.dz
leftwheel.q_a
leftwheel.q_i
leftwheel.q_j
leftwheel.q_k
rightmotor.angle
rightmotor.q_a
rightmotor.q_i
rightmotor.q_j
rightmotor.q_k
rightwheel.dx
rightwheel.dy
rightwheel.dz
rightwheel.q_a
rightwheel.q_i
rightwheel.q_j
rightwheel.q_k
siminput0_input
siminput1_input
tail.q_a
tail.q_i
tail.q_j
tail.q_k

~~~ Equations:
( frame beam.dx beam.dy beam.dz beam.q_a beam.q_i beam.q_j beam.q_k )
(bbox -0.5 0.5 0.0 1.0 1.0)
( input siminput0_input )
( input siminput1_input )
( transient leftmotor.angle 0 )
( transient rightmotor.angle 0 )
( dynamic beam.dx )
( dynamic beam.dy )
( dynamic beam.dz )
( dynamic beam.q_a )
( dynamic beam.q_i )
( dynamic beam.q_j )
( dynamic beam.q_k )
( dynamic leftmotor.angle )
( dynamic leftmotor.q_a )
( dynamic leftmotor.q_i )
( dynamic leftmotor.q_j )
( dynamic leftmotor.q_k )
( dynamic leftwheel.dx )
( dynamic leftwheel.dy )
( dynamic leftwheel.dz )
( dynamic leftwheel.q_a )
( dynamic leftwheel.q_i )
( dynamic leftwheel.q_j )
( dynamic leftwheel.q_k )
( dynamic rightmotor.angle )
( dynamic rightmotor.q_a )
( dynamic rightmotor.q_i )
( dynamic rightmotor.q_j )
( dynamic rightmotor.q_k )
( dynamic rightwheel.dx )
( dynamic rightwheel.dy )
( dynamic rightwheel.dz )
( dynamic rightwheel.q_a )
( dynamic rightwheel.q_i )
( dynamic rightwheel.q_j )
( dynamic rightwheel.q_k )
( dynamic tail.q_a )
( dynamic tail.q_i )
( dynamic tail.q_j )
( dynamic tail.q_k )
(= (+ (* 8 beam.q_j beam.q_a) (* -5 (^ tail.q_a 2)) (* 8 beam.q_k beam.q_i) (* 5 (^ tail.q_k 2)) (* -5 (^ tail.q_i 2)) (* 5 (^ tail.q_j 2))) 0)
(= (+ (* 32 rightmotor.q_j rightmotor.q_a) (* 32 rightmotor.q_k rightmotor.q_i) beam.dx (* -1 rightwheel.dx)) 0)
(= (+ (* 32 rightmotor.q_i rightmotor.q_a) (* -1 beam.dy) rightwheel.dy (* -32 rightmotor.q_k rightmotor.q_j)) 0)
(= (+ (* 32 (^ rightmotor.q_i 2)) (* -1 beam.dz) (* 32 (^ rightmotor.q_j 2)) rightwheel.dz -16) 0)
(= (+ (* 40 beam.q_j beam.q_a) leftwheel.dx (* -1 beam.dx) (* -32 leftmotor.q_k leftmotor.q_i) (* 40 beam.q_k beam.q_i) (* -32 leftmotor.q_j leftmotor.q_a)) 0)
(= (+ (* 40 beam.q_j beam.q_a) leftwheel.dx (* -1 beam.dx) (* -32 leftmotor.q_k leftmotor.q_i) (* 40 beam.q_k beam.q_i) (* -32 leftmotor.q_j leftmotor.q_a)) 0)
(= (+ (* 20 (^ beam.q_a 2)) (* -1 beam.dz) (* -20 (^ beam.q_j 2)) (* 16 (^ leftmotor.q_i 2)) (* -20 (^ beam.q_i 2)) leftwheel.dz (* -16 (^ leftmotor.q_k 2)) (* 20 (^ beam.q_k 2)) (* -16 (^ leftmotor.q_a 2)) (* 16 (^ leftmotor.q_j 2))) 0)
(= (+ (* 4 beam.q_i beam.q_a) (* 5 tail.q_k tail.q_a) (* -4 beam.q_k beam.q_j) (* 5 tail.q_j tail.q_i)) 0)
( == ( + ( ^ beam.q_k 2 ) ( ^ beam.q_i 2 ) ( ^ beam.q_a 2 ) ( ^ beam.q_j 2 ) ) 1 )
( == ( + ( ^ tail.q_j 2 ) ( ^ tail.q_i 2 ) ( ^ tail.q_k 2 ) ( ^ tail.q_a 2 ) ) 1 )
( == ( + ( ^ rightmotor.q_j 2 ) ( ^ rightmotor.q_i 2 ) ( ^ rightmotor.q_a 2 ) ( ^ rightmotor.q_k 2 ) ) 1 )
( == ( D rightmotor.angle ) siminput1_input )
( == ( D leftmotor.angle ) siminput0_input )
( == ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( ^ rightwheel.q_j 2 ) ( ^ rightwheel.q_k 2 ) ) 1 )
( == ( + ( ^ leftwheel.q_j 2 ) ( ^ leftwheel.q_a 2 ) ( ^ leftwheel.q_k 2 ) ( ^ leftwheel.q_i 2 ) ) 1 )
( == ( + ( ^ leftmotor.q_i 2 ) ( ^ leftmotor.q_a 2 ) ( ^ leftmotor.q_j 2 ) ( ^ leftmotor.q_k 2 ) ) 1 )
( == ( + ( ^ beam.q_k 2 ) ( * -1 ( ^ beam.q_i 2 ) ) ( ^ beam.q_a 2 ) ( * -1 ( ^ beam.q_j 2 ) ) ) ( + ( * -1 ( ^ rightmotor.q_j 2 ) ) ( * -1 ( ^ rightmotor.q_i 2 ) ) ( ^ rightmotor.q_a 2 ) ( ^ rightmotor.q_k 2 ) ) )
( == ( + ( * 2 beam.q_a beam.q_i ) ( * 2 beam.q_j beam.q_k ) ) ( + ( * 2 rightmotor.q_a rightmotor.q_i ) ( * 2 rightmotor.q_j rightmotor.q_k ) ) )
( == ( + ( * -2 beam.q_a beam.q_j ) ( * 2 beam.q_i beam.q_k ) ) ( + ( * 2 rightmotor.q_i rightmotor.q_k ) ( * -2 rightmotor.q_a rightmotor.q_j ) ) )
( == ( + ( * 2 beam.q_i beam.q_j ) ( * -2 beam.q_a beam.q_k ) ) ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * -2 rightmotor.q_a rightmotor.q_k ) ) )
( == ( + ( * -1 ( ^ beam.q_k 2 ) ) ( ^ beam.q_i 2 ) ( ^ beam.q_a 2 ) ( * -1 ( ^ beam.q_j 2 ) ) ) ( + ( * -1 ( ^ rightmotor.q_j 2 ) ) ( ^ rightmotor.q_i 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) )
( == ( + ( * 2 beam.q_i beam.q_j ) ( * 2 beam.q_a beam.q_k ) ) ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * 2 rightmotor.q_a rightmotor.q_k ) ) )
( == ( + ( * 2 beam.q_a beam.q_j ) ( * 2 beam.q_i beam.q_k ) ) ( + ( * 2 rightmotor.q_i rightmotor.q_k ) ( * 2 rightmotor.q_a rightmotor.q_j ) ) )
( == ( + ( * -1 ( ^ beam.q_k 2 ) ) ( * -1 ( ^ beam.q_i 2 ) ) ( ^ beam.q_a 2 ) ( ^ beam.q_j 2 ) ) ( + ( * -1 ( ^ rightmotor.q_i 2 ) ) ( ^ rightmotor.q_j 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) )
( == ( + ( * -2 beam.q_a beam.q_i ) ( * 2 beam.q_j beam.q_k ) ) ( + ( * -2 rightmotor.q_a rightmotor.q_i ) ( * 2 rightmotor.q_j rightmotor.q_k ) ) )
( == ( + ( * -1 ( ^ rightmotor.q_j 2 ) ) ( * -1 ( ^ rightmotor.q_i 2 ) ) ( ^ rightmotor.q_a 2 ) ( ^ rightmotor.q_k 2 ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ( ^ rightwheel.q_k 2 ) ) )
( ==
    ( + ( * ( + ( * 2 rightmotor.q_a rightmotor.q_i ) ( * 2 rightmotor.q_j rightmotor.q_k ) ) ( cos rightmotor.angle ) )
        ( * -1 ( + ( * 2 rightmotor.q_i rightmotor.q_k ) ( * -2 rightmotor.q_a rightmotor.q_j ) ) ( sin rightmotor.angle ) ) )
    ( + ( * 2 rightwheel.q_j rightwheel.q_k )
        ( * 2 rightwheel.q_a rightwheel.q_i ) ) )
( ==
    ( + ( * ( + ( * 2 rightmotor.q_a rightmotor.q_i ) ( * 2 rightmotor.q_j rightmotor.q_k ) ) ( sin rightmotor.angle ) )
        ( * ( + ( * 2 rightmotor.q_i rightmotor.q_k ) ( * -2 rightmotor.q_a rightmotor.q_j ) ) ( cos rightmotor.angle ) ) )
    ( + ( * 2 rightwheel.q_i rightwheel.q_k )
        ( * -2 rightwheel.q_a rightwheel.q_j ) ) )
( == ( + ( * ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * -2 rightmotor.q_a rightmotor.q_k ) ) ( cos rightmotor.angle ) ) ( * -1 ( + ( * -1 ( ^ rightmotor.q_j 2 ) ) ( ^ rightmotor.q_i 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) ( sin rightmotor.angle ) ) ) ( + ( * -2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) )
( == ( + ( * ( + ( * -1 ( ^ rightmotor.q_j 2 ) ) ( ^ rightmotor.q_i 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) ( cos rightmotor.angle ) ) ( * ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * -2 rightmotor.q_a rightmotor.q_k ) ) ( sin rightmotor.angle ) ) ) ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) )
( == ( + ( * ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * 2 rightmotor.q_a rightmotor.q_k ) ) ( cos rightmotor.angle ) ) ( * ( + ( * -1 ( ^ rightmotor.q_i 2 ) ) ( ^ rightmotor.q_j 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) ( sin rightmotor.angle ) ) ) ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) )
( == ( + ( * 2 rightmotor.q_i rightmotor.q_k ) ( * 2 rightmotor.q_a rightmotor.q_j ) ) ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_j ) ) )
( == ( + ( * ( + ( * -1 ( ^ rightmotor.q_i 2 ) ) ( ^ rightmotor.q_j 2 ) ( ^ rightmotor.q_a 2 ) ( * -1 ( ^ rightmotor.q_k 2 ) ) ) ( cos rightmotor.angle ) ) ( * -1 ( + ( * 2 rightmotor.q_i rightmotor.q_j ) ( * 2 rightmotor.q_a rightmotor.q_k ) ) ( sin rightmotor.angle ) ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( ^ rightwheel.q_j 2 ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ) )
( == ( + ( * -2 rightmotor.q_a rightmotor.q_i ) ( * 2 rightmotor.q_j rightmotor.q_k ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_i ) ) )
( == ( + ( * -1 ( ^ beam.q_k 2 ) ) ( ^ beam.q_i 2 ) ( * -1 ( ^ beam.q_a 2 ) ) ( ^ beam.q_j 2 ) ) ( + ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_i 2 ) ) ( * -1 ( ^ leftmotor.q_j 2 ) ) ( ^ leftmotor.q_k 2 ) ) )
( == ( + ( * 2 beam.q_a beam.q_i ) ( * 2 beam.q_j beam.q_k ) ) ( + ( * 2 leftmotor.q_j leftmotor.q_k ) ( * 2 leftmotor.q_a leftmotor.q_i ) ) )
( == ( + ( * 2 beam.q_a beam.q_j ) ( * -2 beam.q_i beam.q_k ) ) ( + ( * -2 leftmotor.q_a leftmotor.q_j ) ( * 2 leftmotor.q_i leftmotor.q_k ) ) )
( == ( + ( * 2 beam.q_i beam.q_j ) ( * -2 beam.q_a beam.q_k ) ) ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * -2 leftmotor.q_a leftmotor.q_k ) ) )
( == ( + ( ^ beam.q_k 2 ) ( * -1 ( ^ beam.q_a 2 ) ) ( * -1 ( ^ beam.q_i 2 ) ) ( ^ beam.q_j 2 ) ) ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_i 2 ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_j 2 ) ) ) )
( == ( + ( * -2 beam.q_i beam.q_j ) ( * -2 beam.q_a beam.q_k ) ) ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * 2 leftmotor.q_a leftmotor.q_k ) ) )
( == ( + ( * -2 beam.q_a beam.q_j ) ( * -2 beam.q_i beam.q_k ) ) ( + ( * 2 leftmotor.q_i leftmotor.q_k ) ( * 2 leftmotor.q_a leftmotor.q_j ) ) )
( == ( + ( * -1 ( ^ beam.q_k 2 ) ) ( * -1 ( ^ beam.q_i 2 ) ) ( ^ beam.q_a 2 ) ( ^ beam.q_j 2 ) ) ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_i 2 ) ) ( ^ leftmotor.q_j 2 ) ) )
( == ( + ( * -2 beam.q_j beam.q_k ) ( * 2 beam.q_a beam.q_i ) ) ( + ( * -2 leftmotor.q_a leftmotor.q_i ) ( * 2 leftmotor.q_j leftmotor.q_k ) ) )
( == ( + ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_i 2 ) ) ( * -1 ( ^ leftmotor.q_j 2 ) ) ( ^ leftmotor.q_k 2 ) ) ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( ^ leftwheel.q_k 2 ) ) )
( == ( + ( * -1 ( + ( * -2 leftmotor.q_a leftmotor.q_j ) ( * 2 leftmotor.q_i leftmotor.q_k ) ) ( sin leftmotor.angle ) ) ( * ( + ( * 2 leftmotor.q_j leftmotor.q_k ) ( * 2 leftmotor.q_a leftmotor.q_i ) ) ( cos leftmotor.angle ) ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) )
( == ( + ( * ( + ( * 2 leftmotor.q_j leftmotor.q_k ) ( * 2 leftmotor.q_a leftmotor.q_i ) ) ( sin leftmotor.angle ) ) ( * ( + ( * -2 leftmotor.q_a leftmotor.q_j ) ( * 2 leftmotor.q_i leftmotor.q_k ) ) ( cos leftmotor.angle ) ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) )
( == ( + ( * -1 ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_i 2 ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_j 2 ) ) ) ( sin leftmotor.angle ) ) ( * ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * -2 leftmotor.q_a leftmotor.q_k ) ) ( cos leftmotor.angle ) ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * -2 leftwheel.q_a leftwheel.q_k ) ) )
( == ( + ( * ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * -2 leftmotor.q_a leftmotor.q_k ) ) ( sin leftmotor.angle ) ) ( * ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_i 2 ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_j 2 ) ) ) ( cos leftmotor.angle ) ) ) ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) )
( == ( + ( * ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_i 2 ) ) ( ^ leftmotor.q_j 2 ) ) ( sin leftmotor.angle ) ) ( * ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * 2 leftmotor.q_a leftmotor.q_k ) ) ( cos leftmotor.angle ) ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) )
( == ( + ( * 2 leftmotor.q_i leftmotor.q_k ) ( * 2 leftmotor.q_a leftmotor.q_j ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * 2 leftwheel.q_a leftwheel.q_j ) ) )
( == ( + ( * ( + ( * -1 ( ^ leftmotor.q_k 2 ) ) ( ^ leftmotor.q_a 2 ) ( * -1 ( ^ leftmotor.q_i 2 ) ) ( ^ leftmotor.q_j 2 ) ) ( cos leftmotor.angle ) ) ( * -1 ( + ( * 2 leftmotor.q_i leftmotor.q_j ) ( * 2 leftmotor.q_a leftmotor.q_k ) ) ( sin leftmotor.angle ) ) ) ( + ( ^ leftwheel.q_j 2 ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ) )
( == ( + ( * -2 leftmotor.q_a leftmotor.q_i ) ( * 2 leftmotor.q_j leftmotor.q_k ) ) ( + ( * -2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) )
( == ( + ( * ( / 1 2 ) 25 ( + ( * -2 beam.q_a beam.q_j ) ( * 2 beam.q_i beam.q_k ) ) ) ( * ( / 1 2 ) 50 ( + ( * 2 beam.q_a beam.q_i ) ( * 2 beam.q_j beam.q_k ) ) ) beam.dz ) ( + ( * ( / 1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) ( * ( / 1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) beam.dz ) )
( == ( + ( * ( / 1 2 ) 25 ( + ( * -2 beam.q_a beam.q_j ) ( * 2 beam.q_i beam.q_k ) ) ) ( * ( / 1 2 ) 50 ( + ( * 2 beam.q_a beam.q_i ) ( * 2 beam.q_j beam.q_k ) ) ) ( * 20 ( + ( * -1 ( ^ beam.q_k 2 ) ) ( ^ beam.q_i 2 ) ( * -1 ( ^ beam.q_a 2 ) ) ( ^ beam.q_j 2 ) ) ) beam.dz ) ( + ( * ( / -1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) ( * ( / 1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) beam.dz ) )
( == ( + ( * ( + ( * -2 beam.q_a beam.q_j ) ( * 2 beam.q_i beam.q_k ) ) ( + ( * -1 ( ^ tail.q_i 2 ) ) ( * -1 ( ^ tail.q_j 2 ) ) ( ^ tail.q_k 2 ) ( ^ tail.q_a 2 ) ) ) ( * ( + ( * 2 beam.q_i beam.q_j ) ( * 2 beam.q_a beam.q_k ) ) ( + ( * 2 tail.q_j tail.q_k ) ( * -2 tail.q_a tail.q_i ) ) ) ( * ( + ( * 2 tail.q_a tail.q_j ) ( * 2 tail.q_i tail.q_k ) ) ( + ( * -1 ( ^ beam.q_k 2 ) ) ( ^ beam.q_i 2 ) ( ^ beam.q_a 2 ) ( * -1 ( ^ beam.q_j 2 ) ) ) ) ) 0 )
( >= ( + ( * ( / 1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) ( * ( / -1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) beam.dz ) 0 )
( >= ( + ( * ( / -1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) ( * ( / -1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) beam.dz ) 0 )
( Or 
    ( == ( + ( * ( / -1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) ( * ( / -1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) beam.dz ) 0 )
    ( == ( + ( * ( / 1 2 ) 25 ( + ( * 2 tail.q_i tail.q_k ) ( * -2 tail.q_a tail.q_j ) ) ) ( * ( / -1 2 ) 50 ( + ( * 2 tail.q_j tail.q_k ) ( * 2 tail.q_a tail.q_i ) ) ) beam.dz ) 0 )
)
( >= ( + ( * 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) leftwheel.dz ) 0 )
( >= ( + leftwheel.dz ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
( >= ( + leftwheel.dz ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
( >= ( + leftwheel.dz ( * -1 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
( >= ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) leftwheel.dz ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
( >= ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) leftwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
( Or
    ( And ( == ( + ( * 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) leftwheel.dz ) 0 )
          ( == ( D ( + leftwheel.dy ( * 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) ) ) 0 )
          ( == ( D ( + leftwheel.dx ( * 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) ) ) 0 ) )
    ( And ( == ( + leftwheel.dz ( * -1 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + leftwheel.dy ( * -1 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) ) ) 0 )
          ( == ( D ( + leftwheel.dx ( * -1 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) ) ) 0 ) )
    ( And ( == ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) leftwheel.dz ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + leftwheel.dx ( * ( / -1 2 ) 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * -2 leftwheel.q_a leftwheel.q_k ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ leftwheel.q_j 2 ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) leftwheel.dy ) ) 0 ) )
    ( And ( == ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) leftwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) leftwheel.dx ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * -2 leftwheel.q_a leftwheel.q_k ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ leftwheel.q_j 2 ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ) ) ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) leftwheel.dy ) ) 0 ) )
    ( And ( == ( + leftwheel.dz ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + leftwheel.dx ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * -2 leftwheel.q_a leftwheel.q_k ) ) ) ( * ( / -1 2 ) 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ leftwheel.q_j 2 ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) leftwheel.dy ) ) 0 ) )
    ( And ( == ( + leftwheel.dz ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_a leftwheel.q_i ) ( * 2 leftwheel.q_j leftwheel.q_k ) ) ) ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_k ) ( * -2 leftwheel.q_a leftwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( + ( * -1 ( ^ leftwheel.q_j 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ( ^ leftwheel.q_i 2 ) ) ) leftwheel.dx ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * -2 leftwheel.q_a leftwheel.q_k ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( + ( * 2 leftwheel.q_i leftwheel.q_j ) ( * 2 leftwheel.q_a leftwheel.q_k ) ) ) ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ leftwheel.q_j 2 ) ( * -1 ( ^ leftwheel.q_i 2 ) ) ( ^ leftwheel.q_a 2 ) ( * -1 ( ^ leftwheel.q_k 2 ) ) ) ) leftwheel.dy ) ) 0 ) )
)
( >= ( + ( * 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) rightwheel.dz ) 0 )
( >= ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
( >= ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) rightwheel.dz ) 0 )
( >= ( + rightwheel.dz ( * -1 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
( >= ( + ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ) 0 )
( >= ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
( Or
    ( And ( == ( + ( * 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) rightwheel.dz ) 0 )
          ( == ( D ( + ( * 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) rightwheel.dy ) ) 0 )
          ( == ( D ( + rightwheel.dx ( * 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) ) ) 0 ) )
    ( And ( == ( + rightwheel.dz ( * -1 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + ( * -1 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) rightwheel.dy ) ) 0 )
          ( == ( D ( + ( * -1 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) rightwheel.dx ) ) 0 ) )
    ( And ( == ( + ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * -2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) rightwheel.dx ( * ( / -1 2 ) 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( ^ rightwheel.q_j 2 ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ) ) rightwheel.dy ) ) 0 ) )
    ( And ( == ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * -2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ( * ( / 1 2 ) 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) rightwheel.dx ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ( * ( / -1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( ^ rightwheel.q_j 2 ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ) ) rightwheel.dy ) ) 0 ) )
    ( And ( == ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) rightwheel.dz ) 0 )
          ( == ( D ( + rightwheel.dx ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * -2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ( * ( / -1 2 ) 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / -1 2 ) 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( ^ rightwheel.q_j 2 ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ) ) rightwheel.dy ) ) 0 ) )
    ( And ( == ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * 2 rightwheel.q_j rightwheel.q_k ) ( * 2 rightwheel.q_a rightwheel.q_i ) ) ) rightwheel.dz ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_i rightwheel.q_k ) ( * -2 rightwheel.q_a rightwheel.q_j ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( + ( ^ rightwheel.q_i 2 ) ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( * -1 ( ^ rightwheel.q_j 2 ) ) ) ) rightwheel.dx ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( * -2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) ) ) 0 )
          ( == ( D ( + ( * ( / 1 2 ) 40 ( ^ 3 ( / 1 2 ) ) ( + ( ^ rightwheel.q_a 2 ) ( * -1 ( ^ rightwheel.q_k 2 ) ) ( ^ rightwheel.q_j 2 ) ( * -1 ( ^ rightwheel.q_i 2 ) ) ) ) ( * ( / 1 2 ) 40 ( + ( * 2 rightwheel.q_a rightwheel.q_k ) ( * 2 rightwheel.q_i rightwheel.q_j ) ) ) rightwheel.dy ) ) 0 ) )
)

